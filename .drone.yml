---
kind: pipeline
name: default

platform:
  os: linux
  arch: amd64

workspace:
  base: /go
  path: src/github.com/nytimes/drone-gae

steps:
- name: test
  pull: if-not-exists
  image: golang:1
  commands:
  - go mod download
  - go test -cover -vet all
  environment:
    CGO_ENABLED: 0
    GO111MODULE: on
    GOPROXY: https://proxy.golang.org

- name: build
  pull: if-not-exists
  image: golang:1
  commands:
  - go build -a -ldflags "-X main.version=${DRONE_TAG:-other} -X main.rev=${DRONE_COMMIT}"
  environment:
    CGO_ENABLED: 0
    GO111MODULE: on
    GOPROXY: https://proxy.golang.org
  when:
    branch:
    - master

- name: build_release
  pull: if-not-exists
  image: golang:1
  commands:
  - go build -a -ldflags "-X main.version=${DRONE_TAG:-other} -X main.rev=${DRONE_COMMIT}"
  environment:
    CGO_ENABLED: 0
    GO111MODULE: on
    GOPROXY: https://proxy.golang.org
  when:
    event:
    - tag

- name: publish_release
  pull: if-not-exists
  image: plugins/docker
  settings:
    auto_tag: true
    dockerfile: Dockerfile
    repo: nytimes/drone-gae
  environment:
    DOCKER_PASSWORD:
      from_secret: docker_password
    DOCKER_USERNAME:
      from_secret: docker_username

- name: slack
  pull: if-not-exists
  image: plugins/slack
  settings:
    channel: dv-notifications
  environment:
    SLACK_WEBHOOK:
      from_secret: slack_webhook
  when:
    branch:
    - master

- name: slack_tag
  pull: if-not-exists
  image: plugins/slack
  settings:
    channel: dv-notifications
  environment:
    SLACK_WEBHOOK:
      from_secret: slack_webhook
  when:
    event:
    - tag

...
